apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: javaboots.app.logancloud.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: Number of desired pods
    name: Desired
    type: integer
  - JSONPath: .status.readyReplicas
    description: Number of ready pods
    name: ReadyReplicas
    type: integer
  - JSONPath: .status.currentReplicas
    description: Number of current pods
    name: CurrentReplicas
    type: integer
  - JSONPath: .status.services
    description: The service's name of the boot
    name: Services
    type: string
  - JSONPath: .status.workload
    description: The wordload type for the boot
    name: Workload
    type: string
  - JSONPath: .spec.version
    description: The Version of Boot
    name: Version
    type: string
  group: app.logancloud.com
  names:
    kind: JavaBoot
    listKind: JavaBootList
    plural: javaboots
    shortNames:
    - java
    singular: javaboot
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.HPAReplicas
    status: {}
  validation:
    openAPIV3Schema:
      description: JavaBoot is the Schema for the javaboots API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 47
              pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
          required:
            - name
        spec:
          description: BootSpec defines the desired state of Boot for specified types,
            as JavaBoot/PhpBoot/PythonBoot/NodeJSBoot
          properties:
            command:
              description: Command is command for boot's container. If empty, will
                use image's ENTRYPOINT, specified here if needed override.
              items:
                type: string
              type: array
            env:
              description: Env is list of environment variables to set in the app
                container.
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
                    pattern: ^[-._a-zA-Z][-._a-zA-Z0-9]*$
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, metadata.labels, metadata.annotations,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            type: string
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            health:
              description: Health is check path for the app container.
              maxLength: 2048
              minLength: 0
              type: string
            hpa:
              description: Hpa is the configuration for a horizontal pod autoscaler,
                which automatically manages the replica count of any resource implementing
                the scale subresource based on the metrics specified.
              properties:
                enable:
                  description: Enable is used to define whether HPA are enabled or
                    not Defaults to false.
                  type: boolean
                maxReplicas:
                  description: maxReplicas is the upper limit for the number of replicas
                    to which the autoscaler can scale up. It cannot be less that minReplicas.
                  format: int32
                  maximum: 100
                  minimum: 2
                  type: integer
                metrics:
                  description: metrics contains the specifications for which to use
                    to calculate the desired replica count (the maximum replica count
                    across all metrics will be used).  The desired replica count is
                    calculated multiplying the ratio between the target value and
                    the current value by the current number of pods.  Ergo, metrics
                    used must decrease as the pod count is increased, and vice-versa.  See
                    the individual metric source types for more information about
                    how each type of metric must respond.
                  items:
                    description: MetricSpec specifies how to scale based on a single
                      metric (only `type` and one other matching field should be set
                      at once).
                    properties:
                      external:
                        description: external refers to a global metric that is not
                          associated with any Kubernetes object. It allows autoscaling
                          based on information coming from components running outside
                          of cluster (for example length of queue in cloud messaging
                          service, or QPS from loadbalancer running outside of cluster).
                        properties:
                          metricName:
                            description: metricName is the name of the metric in question.
                            type: string
                          metricSelector:
                            description: metricSelector is used to identify a specific
                              time series within a given metric.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          targetAverageValue:
                            description: targetAverageValue is the target per-pod
                              value of global metric (as a quantity). Mutually exclusive
                              with TargetValue.
                            type: string
                          targetValue:
                            description: targetValue is the target value of the metric
                              (as a quantity). Mutually exclusive with TargetAverageValue.
                            type: string
                        required:
                        - metricName
                        type: object
                      object:
                        description: object refers to a metric describing a single
                          kubernetes object (for example, hits-per-second on an Ingress
                          object).
                        properties:
                          averageValue:
                            description: averageValue is the target value of the average
                              of the metric across all relevant pods (as a quantity)
                            type: string
                          metricName:
                            description: metricName is the name of the metric in question.
                            type: string
                          selector:
                            description: selector is the string-encoded form of a
                              standard kubernetes label selector for the given metric
                              When set, it is passed as an additional parameter to
                              the metrics server for more specific metrics scoping
                              When unset, just the metricName will be used to gather
                              metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          target:
                            description: target is the described Kubernetes object.
                            properties:
                              apiVersion:
                                description: API version of the referent
                                type: string
                              kind:
                                description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"'
                                type: string
                              name:
                                description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          targetValue:
                            description: targetValue is the target value of the metric
                              (as a quantity).
                            type: string
                        required:
                        - metricName
                        - target
                        - targetValue
                        type: object
                      pods:
                        description: pods refers to a metric describing each pod in
                          the current scale target (for example, transactions-processed-per-second).  The
                          values will be averaged together before being compared to
                          the target value.
                        properties:
                          metricName:
                            description: metricName is the name of the metric in question
                            type: string
                          selector:
                            description: selector is the string-encoded form of a
                              standard kubernetes label selector for the given metric
                              When set, it is passed as an additional parameter to
                              the metrics server for more specific metrics scoping
                              When unset, just the metricName will be used to gather
                              metrics.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          targetAverageValue:
                            description: targetAverageValue is the target value of
                              the average of the metric across all relevant pods (as
                              a quantity)
                            type: string
                        required:
                        - metricName
                        - targetAverageValue
                        type: object
                      resource:
                        description: resource refers to a resource metric (such as
                          those specified in requests and limits) known to Kubernetes
                          describing each pod in the current scale target (e.g. CPU
                          or memory). Such metrics are built in to Kubernetes, and
                          have special scaling options on top of those available to
                          normal per-pod metrics using the "pods" source.
                        properties:
                          name:
                            description: name is the name of the resource in question.
                            type: string
                          targetAverageUtilization:
                            description: targetAverageUtilization is the target value
                              of the average of the resource metric across all relevant
                              pods, represented as a percentage of the requested value
                              of the resource for the pods.
                            format: int32
                            type: integer
                          targetAverageValue:
                            description: targetAverageValue is the target value of
                              the average of the resource metric across all relevant
                              pods, as a raw value (instead of as a percentage of
                              the request), similar to the "pods" metric source type.
                            type: string
                        required:
                        - name
                        type: object
                      type:
                        description: type is the type of metric source.  It should
                          be one of "Object", "Pods" or "Resource", each mapping to
                          a matching field in the object.
                        type: string
                    required:
                    - type
                    type: object
                  minItems: 1
                  type: array
                minReplicas:
                  description: minReplicas is the lower limit for the number of replicas
                    to which the autoscaler can scale down. It defaults to 1 pod.
                  format: int32
                  minimum: 1
                  type: integer
              type: object
            image:
              description: Image is the app container' image. Image must not have
                a tag version.
              type: string
            nodePort:
              description: NodePort will expose the service on each node’s IP at a
                random port, default is ``
              enum:
              - "true"
              - "false"
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              description: NodeSelector is a selector which must be true for the pod
                to fit on a node. Selector which must match a node's labels for the
                pod to be scheduled on that node.
              type: object
            port:
              description: Port that are exposed by the app container
              format: int32
              maximum: 65535
              minimum: 1
              type: integer
            priority:
              description: Priority will set the priorityClassName for the boot's
                workloads, default is ``
              type: string
            prometheus:
              description: Prometheus will scrape metrics from the service, default
                is `true`
              enum:
              - ""
              - "true"
              - "false"
              type: string
            pvc:
              description: pvc is list of PersistentVolumeClaim to set in the app
                container.
              items:
                description: PersistentVolumeClaimMount defines the Boot match a PersistentVolumeClaim
                properties:
                  mountPath:
                    description: Path within the container at which the volume should
                      be mounted.  Must not contain ':'.
                    type: string
                    minLength: 1
                  name:
                    description: This must match the Name of a PersistentVolumeClaim.
                    type: string
                    minLength: 1
                    maxLength: 63
                  readOnly:
                    description: Mounted read-only if true, read-write otherwise (false
                      or unspecified). Defaults to false.
                    type: boolean
                required:
                - mountPath
                - name
                type: object
              type: array
            readiness:
              description: Readiness is a readiness check path for the app container.
              maxLength: 2048
              minLength: 0
              type: string
            replicas:
              description: Replicas is the number of desired replicas. This is a pointer
                to distinguish between explicit zero and unspecified. Defaults to
                1.
              format: int32
              maximum: 100
              minimum: 0
              type: integer
            resources:
              description: Resources is the compute resource requirements for the
                app container
              properties:
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                  properties:
                    cpu:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    memory:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    storage:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    ephemeral-storage:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                  properties:
                    cpu:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    memory:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    storage:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
                    ephemeral-storage:
                      type: string
                      minLength: 1
                      maxLength: 63
                      pattern: ^([+]?[0-9.]+)([eEinumkKMGTP]*[+]?[0-9]*)$
              type: object
            sessionAffinity:
              description: SessionAffinity is SessionAffinity for boot's created service.
                If empty, will not set
              enum:
              - ClientIP
              - None
              - ""
              type: string
            subDomain:
              description: Reserved, not used. for latter use
              type: string
            version:
              description: Version is the app container's image version.
              type: string
            workload:
              description: Workload will set the wordload type for the boot,can be
                `Deployment` or `StatefulSet`. default is `Deployment`
              enum:
              - Deployment
              - StatefulSet
              type: string
          required:
          - image
          - version
          type: object
        status:
          description: BootStatus defines the observed state of Boot for specified
            types, as JavaBoot/PhpBoot/PythonBoot/NodeJSBoot
          properties:
            HPAReplicas:
              description: HPAReplicas the number of non-terminated replicas that
                are receiving active traffic
              format: int32
              type: integer
            currentReplicas:
              description: CurrentReplicas is the number of current replicas.
              format: int32
              type: integer
            readyReplicas:
              description: ReadyReplicas is the number of ready replicas.
              format: int32
              type: integer
            replicas:
              description: Replicas is the number of desired replicas.
              format: int32
              type: integer
            revision:
              description: Revision is the revision ID of the boot
              type: string
            selector:
              description: Selector that identifies the pods that are receiving active
                traffic
              type: string
            services:
              description: Services is the service's name of the boot, include app
                and sidecar
              type: string
            workload:
              description: Workload is the wordload type for the boot,can be `Deployment`
                or `StatefulSet`
              enum:
              - Deployment
              - StatefulSet
              type: string
          type: object
      #type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
